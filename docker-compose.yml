version: '3'
services:
  mysql:
    image: mysql:8.0
    ports:
      - "3396:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=application
      - MYSQL_PASSWORD=application
      - MYSQL_DATABASE=hhplus
    volumes:
      - ./data/mysql/:/var/lib/mysql
  redis_container:
      # 사용할 이미지
      image: redis:latest
      # 컨테이너명
      container_name: redis_test
      # 접근 포트 설정(컨테이너 외부:컨테이너 내부)
      ports:
        - 6379:6379
      # 스토리지 마운트(볼륨) 설정
      volumes:
        - ./redis/data:/data
        - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
      # 컨테이너에 docker label을 이용해서 메타데이터 추가
      labels:
        - "name=redis"
        - "mode=standalone"
      # 컨테이너 종료시 재시작 여부 설정
      restart: always
      command: redis-server /usr/local/conf/redis.conf

  zookeeper-0:
    image: bitnami/zookeeper:3.9.2
    container_name: zookeeper-0
    hostname: zookeeper-0
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - kafka-cluster
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka-1:
    container_name: kafka-1
    hostname: kafka1
    image: bitnami/kafka:3.7.0
    ports:
      - 10002:9094
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ENABLE_KRAFT: no
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper-0:2181
      KAFKA_CFG_LISTENERS: CLIENT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka-1:9092,EXTERNAL://localhost:10002
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - kafka-cluster
    volumes:
      - kafka1_data:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    depends_on:
      - kafka-1
    ports:
      - 8888:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9092
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - kafka-cluster


  influxdb:
    image: influxdb:1.8
    networks:
      - k6
      - grafana
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6

  grafana:
    image: grafana/grafana:9.3.8
    networks:
      - grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./grafana:/etc/grafana/provisioning/

  k6:
    image: grafana/k6:latest
    networks:
      - k6
    ports:
      - "6565:6565"
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./k6:/scripts

volumes:
  zookeeper_data:
  kafka1_data:

networks:
  default:
    driver: bridge
  kafka-cluster:
  k6:
  grafana: